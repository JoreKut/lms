version: '3.8'
services:
  api:
    container_name: lms-api

    build:
      context: .
      dockerfile: docker/api/Dockerfile

    restart: always

    env_file:
      - .env
    environment:
      - API_POSTGRES_HOST=postgres
      - API_POSTGRES_PORT=5432
    depends_on:
      - postgres
    ports:
      - ${API_SERVER_PORT}:5000
    command: [
      "poetry", "run", "uvicorn", "app:create_app",
      "--host", "0.0.0.0",
      "--port", '5000'
    ]

  postgres:
    container_name: lms-api-postgres

    build:
      context: .
      dockerfile: docker/postgresql/Dockerfile

    restart: always

    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${API_POSTGRES_PASSWORD}
      - POSTGRES_USER=${API_POSTGRES_USER}
      - POSTGRES_DATABASES="test_${API_POSTGRES_NAME}","${API_POSTGRES_NAME}"
    ports:
      - ${API_POSTGRES_PORT}:5432
    volumes:
      - ${POSTGRES_DATA_VOLUME}:/var/lib/postgresql/data/pgdata

  migrations:
    container_name: lms-api-migrations
    build:
      context: .
      dockerfile: docker/migrations/Dockerfile
    env_file:
      - .env
    environment:
      - API_POSTGRES_HOST=postgres
      - API_POSTGRES_PORT=5432
    depends_on:
      - postgres
    command: [
        "bash", "./scripts/wait-for-server.sh", "postgres:5432", "-t", "120",
        "--",
        "poetry", "run", "python", "-m", "scripts.migrate"
    ]

networks:
  default:
    driver: bridge
